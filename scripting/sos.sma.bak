
/***************************************************************************************
 * Adjuk el a lekünket!		Version: 1.0			Date: 01/12/2022
 * (Sell Our Souls!)
 *
 *
 *	Cvarok:
 *		sos_dollar "10"
 *		Mennyi HP-ba keruljon a 10000$?
 *		
 *		sos_vegtelenammo "5"
 *		Mennyi HP-ba keruljon a Vegtelen Ammo?
 *
 *		sos_lopakodas "10"
 *		Mennyi HP-ba keruljon a Lopakodas?
 *
 *		sos_alruha "25"
 *		Mennyi HP-ba keruljon az Alruha?
 *
 *		sos_lathatatlansag "50"
 *		Mennyi HP-ba keruljon a Lathatatlansag?
 *		
 *		sos_noclip "25"
 *		Mennyi HP-ba keruljon a NoClip?
 *
 *		sos_bhop "50"
 *		Mennyi HP-ba keruljon az AUTOBhop?
 *
 *		sos_buyzone "1" (0/1)
 *		Csak vasarlasi zonaban nyiljon meg a menu?
 *		0:Nem
 *		1:Igen(Alap)
 *
 *		sos_buytime "1" (0/1)
 *		Csak vasarlasi idoben nyiljon meg a menu?
 *		0:Nem
 *		1:Igen(Alap)
 *	
 *									Creat by: *S1MPLA
 ***************************************************************************************/
 
 #include <amxmodx>
 #include <amxmisc>
 #include <cstrike>
 #include <engine>
 #include <fun>
 #include <hamsandwich>
 
#define PLUGIN "Adjuk el a lelkunket!"
#define VERSION "1.0"
#define AUTHOR "*S1MPLA"
 
new PREFIX[] = "S.O.S."
new gHasuammo[33]
new bool:UserHaveBhop[33]
new const szElutasitvaSound[ ] = "s1mpla/elutasitva.wav"
new const szMegvasarolvaSound[ ] = "s1mpla/megvasarolva.wav"

new bool:BuyTimeAllow 
new bool:BuyZoneAllow[33] 
new Float:BuyTimeFloat 
new BuyTimeNum 
new bool:BuyTimeCvar 
new bool:BuyZoneCvar 


//************************//
//	ColorChat Inc	  //
//************************//
enum Color
{
	NORMAL = 1, // clients scr_concolor cvar color
	GREEN, // Green Color
	TEAM_COLOR, // Red, grey, blue
	GREY, // grey
	RED, // Red
	BLUE, // Blue
}

new TeamName[][] = 
{
	"",
	"TERRORIST",
	"CT",
	"SPECTATOR"
}

ColorChat(id, Color:type, const msg[], {Float,Sql,Result,_}:...)
{
	new message[256];

	switch(type)
	{
		case NORMAL: // clients scr_concolor cvar color
		{
			message[0] = 0x01;
		}
		case GREEN: // Green
		{
			message[0] = 0x04;
		}
		default: // White, Red, Blue
		{
			message[0] = 0x03;
		}
	}

	vformat(message[1], 251, msg, 4);

	// Make sure message is not longer than 192 character. Will crash the server.
	message[192] = '^0';

	new team, ColorChange, index, MSG_Type;
	
	if(id)
	{
		MSG_Type = MSG_ONE;
		index = id;
	} else {
		index = FindPlayer();
		MSG_Type = MSG_ALL;
	}
	
	team = get_user_team(index);
	ColorChange = ColorSelection(index, MSG_Type, type);

	ShowColorMessage(index, MSG_Type, message);
		
	if(ColorChange)
	{
		Team_Info(index, MSG_Type, TeamName[team]);
	}
}

ShowColorMessage(id, type, message[])
{
	static bool:saytext_used;
	static get_user_msgid_saytext;
	if(!saytext_used)
	{
		get_user_msgid_saytext = get_user_msgid("SayText");
		saytext_used = true;
	}
	message_begin(type, get_user_msgid_saytext, _, id);
	write_byte(id)		
	write_string(message);
	message_end();	
}

Team_Info(id, type, team[])
{
	static bool:teaminfo_used;
	static get_user_msgid_teaminfo;
	if(!teaminfo_used)
	{
		get_user_msgid_teaminfo = get_user_msgid("TeamInfo");
		teaminfo_used = true;
	}
	message_begin(type, get_user_msgid_teaminfo, _, id);
	write_byte(id);
	write_string(team);
	message_end();

	return 1;
}

ColorSelection(index, type, Color:Type)
{
	switch(Type)
	{
		case RED:
		{
			return Team_Info(index, type, TeamName[1]);
		}
		case BLUE:
		{
			return Team_Info(index, type, TeamName[2]);
		}
		case GREY:
		{
			return Team_Info(index, type, TeamName[0]);
		}
	}

	return 0;
}

FindPlayer()
{
	new i = -1;

	while(i <= get_maxplayers())
	{
		if(is_user_connected(++i))
			return i;
	}

	return -1;
}

//************************//
//	PLUGIN	 	 //
//************************//
 public plugin_init() {
 	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_clcmd("say /sos", "ShowMenu", _, "menu");
	register_clcmd("say_team /sos", "ShowMenu", _, "menu");
	register_event("CurWeapon","check_weapon","be","1=1")
	register_logevent("endround",2,"0=World triggered","1=Round_End")
	set_task(120.0, "hirdetes", 0, "", 0, "b", 0)
	register_event("StatusIcon","BuyIcon","be","2=buyzone") 
	register_event("RoundTime","RoundTime","bc") 
	register_cvar("sos_dollar","10")
	register_cvar("sos_vegtelenammo","5")
	register_cvar("sos_lopakodas","15")
	register_cvar("sos_lathatatlansag","50")
	register_cvar("sos_alruha","25")
	register_cvar("sos_bhop","15") 
	register_cvar("sos_noclip","70") 
	register_cvar("sos_buyzone","1")
	register_cvar("sos_buytime","1") 
	
 }
 public plugin_precache()
{
	precache_sound( szMegvasarolvaSound );
	precache_sound( szElutasitvaSound );
}
 public client_connect(id) {
 	
	client_cmd(id, "echo ");
	client_cmd(id, "echo ^" *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=* ^" ");
	client_cmd(id, "echo ^" *=-=    S.O.S. is active on this Server!  ^" ");
	client_cmd(id, "echo ^" *=-=                                          ^" ");
	client_cmd(id, "echo ^" *=-=          powered by: *S1MPLA    ^" ");
	client_cmd(id, "echo ^" *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=* ^" ");
	client_cmd(id, "echo ");
	
	gHasuammo[id] = 0
	return PLUGIN_HANDLED
 }

public client_disconnect(id) {
	gHasuammo[id] = 0
	return PLUGIN_HANDLED
	
 }
public endround() {
	for(new id = 1; id < 33; id++) {
		gHasuammo[id] = 0
		UserHaveBhop[id] = false
		set_user_footsteps(id, 0);
		set_user_noclip(id, 0);
		cs_reset_user_model(id);
		set_user_rendering(id,kRenderFxNone,255,255,255, kRenderNormal,16);
	}
	
	return PLUGIN_CONTINUE
 }
public hirdetes(id){
	
	ColorChat(id, GREEN,"^3[^4S^1.^3O^1.^4S^1.^3] ^1Ezen a szerveren a ^3S.O.S. ^4%s ^1verziója fut! ^4C^3r^1e^4a^3t^1e^4d ^3B^1y^4: ^3*^1S^41^3M^1P^4L^3A",VERSION);
	ColorChat(id, GREEN,"^3[^4S^1.^3O^1.^4S^1.^3] ^1Add el a lelked különbözö dolgokért! ^3Használd a parancsot^1: ^4/sos")

}
 public check_weapon(id) {
	if(gHasuammo[id] == 1) {
		new wpnid = read_data(2)
		new clip = read_data(3)
		if(wpnid==CSW_C4||wpnid==CSW_KNIFE||wpnid==CSW_HEGRENADE||wpnid==CSW_SMOKEGRENADE||wpnid==CSW_FLASHBANG) return
		if(clip==0) {
			new wpnname[32]
			get_weaponname(wpnid,wpnname,31)
			new wpn = -1
			while((wpn=find_ent_by_class(wpnid,wpnname))!=0) {
				if(id==entity_get_edict(wpn,EV_ENT_owner)) {
					cs_set_weapon_ammo(wpn,maxclip(id,wpnid))
					break
				}
			}
		}
	}
	if(gHasuammo[id] == 0) {
		return
	}
 }

 stock maxclip(id, wpnid) {
	if(gHasuammo[id] == 1) {
		new ca = 0
		switch (wpnid) {
			case CSW_P228 : ca = 13
			case CSW_SCOUT : ca = 10
			case CSW_HEGRENADE : ca = 0
			case CSW_XM1014 : ca = 7
			case CSW_C4 : ca = 0
			case CSW_MAC10 : ca = 30
			case CSW_AUG : ca = 30
			case CSW_SMOKEGRENADE : ca = 0
			case CSW_ELITE : ca = 15
			case CSW_FIVESEVEN : ca = 20
			case CSW_UMP45 : ca = 25
			case CSW_SG550 : ca = 30
			case CSW_GALI : ca = 35
			case CSW_FAMAS : ca = 25
			case CSW_USP : ca = 12
			case CSW_GLOCK18 : ca = 20
			case CSW_AWP : ca = 10
			case CSW_MP5NAVY : ca = 30
			case CSW_M249 : ca = 100
			case CSW_M3 : ca = 8
			case CSW_M4A1 : ca = 30
			case CSW_TMP : ca = 30
			case CSW_G3SG1 : ca = 20
			case CSW_FLASHBANG : ca = 0
			case CSW_DEAGLE	: ca = 7
			case CSW_SG552 : ca = 30
			case CSW_AK47 : ca = 30
		}
		return ca
	}
	return PLUGIN_CONTINUE
 }

public RoundTime() 
{ 
	if ( read_data(1)==get_cvar_num("mp_freezetime") || read_data(1)==6 )
	{ 
		remove_task(701) 
		BuyTimeAllow = true 
		BuyTimeFloat = get_cvar_float("mp_buytime") * 60 
		BuyTimeNum = floatround(BuyTimeFloat,floatround_floor) 
		BuyTimeCvar = (get_cvar_num("sos_buytime")) ? true : false 
		BuyZoneCvar = (get_cvar_num("sos_buyzone")) ? true : false 
	} 
	else 
	{ 
		set_task(BuyTimeFloat,"BuyTimeTask",701) 
	} 

	return PLUGIN_CONTINUE 
} 
public BuyTimeTask() 
{ 
	BuyTimeAllow = false
}

public BuyIcon(id) 
{ 
	if (read_data(1)) 
		BuyZoneAllow[id] = true 
	else 
		BuyZoneAllow[id] = false 

	return PLUGIN_CONTINUE 
}

public Check(id)
{ 
	if ( !is_user_alive(id)){ 
		ColorChat(id, GREEN, "^4[%s] ^3Halottak ^4NEM ^1tudják eladni a lelküket!", PREFIX);
		return false 
	} 
    
	if ((!BuyZoneAllow[id]&&BuyZoneCvar) ) { 
		ColorChat(id, GREEN, "^4[%s] ^4NEM ^1tudod eladni a lelked a ^3vásárlási zónán kivül^1!", PREFIX);
		return false 
	} 
    
	if (BuyTimeCvar) { 
		if (!CheckTime(id)) 
			return false 
	} 
	return true 
} 
public CheckTime(id)
{ 
   if (!BuyTimeAllow) 
   { 
      ColorChat(id, GREEN, "^4[%s] ^1Le telt a ^3 %d másodperc.^1Lejárt a vásárlási idö!",PREFIX, BuyTimeNum);
      return false 
   } 
   return true 
} 
public client_PreThink(id) {
   if(!UserHaveBhop[id])
      return 0;
 
   entity_set_float(id, EV_FL_fuser2, 0.0);
 
   if(entity_get_int(id, EV_INT_button) & 2) {
      new flags = entity_get_int(id, EV_INT_flags);
 
      if(flags & FL_WATERJUMP)
         return 0;
 
      if(entity_get_int(id, EV_INT_waterlevel) >= 2)
         return 0;
 
      if(!(flags & FL_ONGROUND))
         return 0;
 
      new Float:velocity[3];
      entity_get_vector(id, EV_VEC_velocity, velocity);
      velocity[2] += 250.0;
      entity_set_vector(id, EV_VEC_velocity, velocity);
 
      entity_set_int(id, EV_INT_gaitsequence, 6);
   }
 
   return 0;
}
 //************************//
//    Menu kezdodik	  //
//************************//
public ShowMenu(id)
{
	new menu = menu_create("\wS\d.\yO\d.\rS  \d| \wMenü^n\yby \rs1mpla", "menu")

	menu_additem(menu, "10000$ \r[10HP]", "0")
	menu_additem(menu, "Végtelen Ammo \r[5HP]", "1");
	menu_additem(menu, "Lopakodás \r[15HP]", "2");
	menu_additem(menu, "Láthatatlanság \r[50HP]", "3");
	menu_additem(menu, "Álruha \r[25HP]", "4");
	menu_additem(menu, "AutoBHOP \r[15HP]", "5");
	menu_additem(menu, "NoClip \r[70HP]", "6");

	menu_setprop(menu, MPROP_EXIT, MEXIT_ALL);
	menu_setprop(menu, MPROP_BACKNAME, "Vissza")
	menu_setprop(menu, MPROP_NEXTNAME, "Tovább")
	menu_setprop(menu, MPROP_EXITNAME, "Kilépés")
	menu_display(id, menu, 0);	
	return PLUGIN_HANDLED 
}

public menu(id, menu, item)
{	if(item == MENU_EXIT)
	{
		menu_cancel(id);
		return PLUGIN_HANDLED;
	}
	if (!Check(id)) { 
		return PLUGIN_HANDLED 
	} 
	new data[6],name[64]
	new acces,callback
	menu_item_getinfo(menu,item,acces,data,charsmax(data),name,charsmax(name),callback)
	new key = str_to_num(data)

	switch(key){
		case 0:{
			new koltseg = get_cvar_num("sos_dollar")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				set_user_health(id,Health-koltseg)
				cs_set_user_money(id, cs_get_user_money(id)+10000)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3 10000$ ^1!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3 10000$^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
		case 1:{
			new koltseg = get_cvar_num("sos_vegtelenammo")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				gHasuammo[id] = 1
				set_user_health(id,Health-koltseg)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3 Végtelen Ammo ^1!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3 Végtelen Ammo^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
		case 2:{
			new koltseg = get_cvar_num("sos_lopakodas")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				set_user_footsteps(id, 1)
				set_user_health(id,Health-koltseg)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3Lopakodás ^1!Most már van nem hallani a lépéseid!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3Lopakodás‘ ^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
		case 3:{
			new koltseg = get_cvar_num("sos_lathatatlansag")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				set_user_rendering(id, kRenderFxNone, 0, 0, 0, kRenderTransAlpha , 0);
				set_user_health(id,Health-koltseg)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3Láthatatlanság ^1!Most már nem látnak téged!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3Láthatatlanság‘ ^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}

		}
		case 4:{
			new koltseg = get_cvar_num("sos_alruha")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
			new Team = get_user_team(id)
			new rand4 = random_num(1, 4)
			switch(rand4)
		{
			case 1: 
			{
				if(Team == 1) 
				{
				cs_set_user_model(id, "sas")
				} else if(Team == 2) {
				cs_set_user_model(id, "leet")
				}
			}
			case 2: 
			{
				if(Team== 1) 
				{
				cs_set_user_model(id, "gsg9")
				} else if(Team == 2) {
				cs_set_user_model(id, "arctic")
				}
			}
			case 3: 
			{
				if(Team == 1) 
				{
				cs_set_user_model(id, "gign")
				} else if(Team == 2) {
				cs_set_user_model(id, "guerilla")
				}
			}
			case 4: 
			{
				if(Team== 1) 
				{
				cs_set_user_model(id, "urban")
				} else if(Team == 2) {
				cs_set_user_model(id, "phoenix")
			}
		}
			}
			set_user_health(id,Health-koltseg)
			ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3Álruha ^1!Most már úgy nézel ki mint az ellenség!", PREFIX);
			emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
			ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3Álruha‘ ^1!!", PREFIX);
			emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
		case 5:{
			new koltseg = get_cvar_num("sos_bhop")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				UserHaveBhop[id] = true
				set_user_health(id,Health-koltseg)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3AutoBHOP ^1!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3AutoBHOP^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
		case 6:{
			new koltseg = get_cvar_num("sos_noclip")
			new Health = get_user_health ( id );
			if(Health >= koltseg)
			{
				set_user_noclip(id, 1)
				set_user_health(id,Health-koltseg)
				ColorChat(id, GREEN, "^4[%s] ^1Sikeresen megvetted:^3NoClip ^1!", PREFIX);
				emit_sound( id, CHAN_ITEM, szMegvasarolvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
			else
			{
				ColorChat(id, GREEN, "^4[%s] ^3Nincs ^1elég ^3HP-d ^1hogy megvedd:^3NoClip^1!!", PREFIX);
				emit_sound( id, CHAN_ITEM, szElutasitvaSound, VOL_NORM, ATTN_NORM, 0 , PITCH_NORM );
			}
		}
}
	menu_destroy(menu);
	return PLUGIN_HANDLED;
}
